body {
    font-family: 'Open Sans', sans-serif; /* * Open Sans is the default font while sans-serif is a fallback option */
}
h1 {
    text-align: center; /* * So that the text is at the centre */
}
#container {
    background-color: #003049;
    width: 90%;
    height: 500px;
    margin: 0 auto; /* * So that this section is in the middle of the screen */
    border: 5px solid #003049;
    display: flex; /* * This tells all the divs to be in line and not one after another(as by default, dives are one after another ) */
    /* ! The above statement lets us use Flexbox, so write the above statement when you want to use flexbox */

    /* ! Flexbox Model */
    /* * It consists of 2 axis: Main Axis(goes from left to right) and Cross Axis(goes from Top to Bottom) */
    /* * Whenever css is in flexbox mode, by default we are using the main axis, so all the elements become inline elements */
    /* * We can reverse the direction of main axis and also make the elements follow the cross axis if we want to using: */

    /* ! flex-direction */

    /* * It lets change the direction and axis of the elements */
    /* * Elements are chosen by the order they are written in the html file */

    flex-direction: row; /* * Default: All elements start from left and go to right */
    /*flex-direction: row-reverse; /* * All elements start from right and go to left */
    /*flex-direction: column; /* * All the elements follow the cross axis */
    /*flex-direction: column-reverse; /* * All elements go from bottom to top */

    /* ! justify-content */

    /* * We can specify how the content is on the page */
    /* * It depends a lot on the flex-direction */

    justify-content: flex-start; /* * Elements are kept at the place specified by the flex-direction */
    justify-content: center; /* * Elements are kept at the centre of the flexbox */
    justify-content: flex-end; /* * Elements are pushed to the end of the box(that is, the final element touches the container at the other end) */
    justify-content: space-between; /* * There will be spaces assigned between each element(these spaces come from any extra space left from flex-direction) but not on the extreme ends of the first and final element */
    justify-content: space-around; /* * Similar to space-between, just that there is space for the extreme ends of the first and final element so that they don't touch the end of the container */
    justify-content: space-evenly; /* * Similar to space-between, just that spaces are the same for all the elements and between the first and final element and container */

}

#container div{ /* * This puts the coloured divs on the screen */
    width: 200px;
    height: 200px;
}

